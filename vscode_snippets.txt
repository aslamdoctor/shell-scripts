{
  "Laravel Template with Vue Support": {
    "prefix": "laraveltemplatevue",
    "body": [
      "<!doctype html>",
      "<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">",
      "    <head>",
      "        <meta charset=\"utf-8\">",
      "        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
      "        <title>Laravel</title>",
      "        <link href=\"https://fonts.googleapis.com/css?family=Nunito:200,600\" rel=\"stylesheet\" type=\"text/css\">",
      "        <link href=\"{{ mix('css/app.css') }}\" type=\"text/css\" rel=\"stylesheet\" />",
      "        <meta name=\"csrf-token\" value=\"{{ csrf_token() }}\" />",
      "    </head>",
      "    <body>",
      "        <div id=\"app\">",
      "          <example-component></example-component>",
      "        </div>",
      "        <script src=\"{{ mix('js/app.js') }}\" type=\"text/javascript\"></script>",
      "    </body>",
      "</html>",
      ""
    ],
    "description": "Laravel Template with Vue Support"
  },

  "Laravel App.js Code": {
    "prefix": "laravelappjs",
    "body": [
      "// App.js",
      "",
      "require('./bootstrap');",
      "",
      "window.Vue = require('vue');",
      "",
      "import VueRouter from 'vue-router';",
      "Vue.use(VueRouter);",
      "",
      "import VueAxios from 'vue-axios';",
      "import axios from 'axios';",
      "Vue.use(VueAxios, axios);",
      "",
      "Vue.component('example-component', require('./components/ExampleComponent.vue'));",
      "",
      "const router = new VueRouter({ mode: 'history'});",
      "const app = new Vue(Vue.util.extend({ router })).$mount('#app');",
      ""
    ],
    "description": "Laravel App.js Code"
  },

  "jQuery Scroll to Top": {
    "prefix": "jqgotop",
    "body": [
      "// scroll to top",
      "$(\"a.go-top\").click(function() {",
      "	$(\"html, body\").animate({ scrollTop: 0 }, 300);",
      "	return false;",
      "});"
    ],
    "description": "jQuery Scroll to Top"
  },

  "Slick Carousel Boilerplate": {
    "prefix": "slickcarousel",
    "body": [
      "// ${1:carouselname} Carousel",
      "$('#${2:block_id} .the-carousel').slick({",
      "	autoplay:true,",
      "	autoplaySpeed:3000,",
      "	dots: false,",
      "	arrows:false,",
      "	infinite: true,",
      "	speed: 300,",
      "	slidesToShow: 4,",
      "	slidesToScroll: 4,",
      "	adaptiveHeight: true,",
      "	prevArrow: '<button type=\"button\" class=\"slick-prev\">Previous</button>',",
      "	nextArrow: '<button type=\"button\" class=\"slick-next\">Next</button>',",
      "	responsive: [",
      "		{",
      "			breakpoint: 769,",
      "			settings: {",
      "				slidesToShow: 3,",
      "				slidesToScroll: 3",
      "			}",
      "		},",
      "		{",
      "			breakpoint: 579,",
      "			settings: {",
      "				slidesToShow: 1,",
      "				slidesToScroll: 1,",
      "			}",
      "		}",
      "	]",
      "});"
    ],
    "description": "Slick Carousel Boilerplate"
  },

  "Axios GET Request": {
    "prefix": "axiosget",
    "body": [
      "axios.get('REQUEST_URL')",
      ".then((response) => {",
      "	// handle success",
      "	console.log(response.data);",
      "	response.data.rows.forEach(row => {",
      "",
      "	});",
      "})",
      ".catch( (error) => {",
      "	// handle error",
      "	console.log(error);",
      "})",
      ".then(function () {",
      "	// always executed",
      "});"
    ],
    "description": "Axios GET Request"
  },

  "Axios POST Request": {
    "prefix": "axiospost",
    "body": [
      "var formData = new FormData();",
      "formData.append('name', vm.name);",
      "",
      "axios.post('REQUEST_URL', formData)",
      ".then((response) => {",
      "	console.log(response);",
      "})",
      ".catch( (error) => {",
      "	console.log(error);",
      "});"
    ],
    "description": "Axios POST Request"
  },

  "Ajax Get": {
    "prefix": "ajaxget",
    "body": [
      "$.get(\"${1:example}\", function(data, status){",
      "    alert(\"Data: \" + data + \" Status: \" + status);",
      "});"
    ],
    "description": "Ajax Get"
  },

  "Ajax Post": {
    "prefix": "ajaxpost",
    "body": [
      "$.post(\"${1:url}\",",
      "{",
      "    name: \"Donald Duck\",",
      "    city: \"Duckburg\"",
      "},",
      "function(data, status){",
      "    alert(\"Data: \" + data + \" Status: \" + status);",
      "});"
    ],
    "description": "Ajax Post"
  },

  "PHP Open/Close Tags": {
    "prefix": "php",
    "body": ["<?php ${1:test};?>"],
    "description": "PHP Open/Close Tags"
  },

  "Wp Template URL": {
    "prefix": "wptemplateurl",
    "body": ["<?php bloginfo(\"template_url\");?>/"],
    "description": "Wp Template URL"
  },

  "Wp Site URL": {
    "prefix": "wpsiteurl",
    "body": ["<?php bloginfo(\"url\");?>/"],
    "description": "Wp Site URL"
  },

  "Wordpress Search Form": {
    "prefix": "wpsearch",
    "body": [
      "<form action=\"<?php bloginfo('siteurl'); ?>\" id=\"searchform\" method=\"get\">",
      "	<input type=\"text\" id=\"s\" name=\"s\" value=\"<?php the_search_query();?>\" />",
      "	<input type=\"submit\" value=\"Search\" id=\"searchsubmit\" />",
      "</form>"
    ],
    "description": "Wordpress Search Form"
  },

  "Mobble Check": {
    "prefix": "mobblecheck",
    "body": [
      "<?php",
      "if(is_mobile()):",
      "    get_thumb('about-m', 'about-thumb', '');	",
      "elseif(is_tablet()):",
      "    get_thumb('about-t', 'about-thumb', '');	",
      "else:",
      "    get_thumb('about-d', 'about-thumb', '');	",
      "endif;",
      "?>"
    ],
    "description": "Mobble Check"
  },

  "Wordpress Thumbnail": {
    "prefix": "wpthumb",
    "body": [
      "<?php",
      "get_thumb('thumb-size', 'css-class', 'http://placehold.it/850x550');",
      "?>"
    ],
    "description": "Wordpress Thumbnail"
  },

  "Placeholder Image": {
    "prefix": "phimage",
    "body": [
      "<img src=\"https://source.unsplash.com/user/erondu/${1:300}x${2:300}\" alt=\"\"/>"
    ],
    "description": "Placeholder Image"
  },

  "Placeholder Image 2": {
    "prefix": "phimage2",
    "body": ["<img src=\"https://placehold.it/${1:123}x${2:456}\" alt=\"\"/>"],
    "description": "Placeholder Image"
  },

  "Slick Carousel Boilerplate": {
    "prefix": "slickcarousel",
    "body": [
      "// ${1:carouselname} Carousel",
      "$('#${2:block_id} .the-carousel').slick({",
      "	autoplay:true,",
      "	autoplaySpeed:3000,",
      "	dots: false,",
      "	arrows:false,",
      "	infinite: true,",
      "	speed: 300,",
      "	slidesToShow: 4,",
      "	slidesToScroll: 4,",
      "	adaptiveHeight: true,",
      "	prevArrow: '<button type=\"button\" class=\"slick-prev\">Previous</button>',",
      "	nextArrow: '<button type=\"button\" class=\"slick-next\">Next</button>',",
      "	responsive: [",
      "		{",
      "			breakpoint: 769,",
      "			settings: {",
      "				slidesToShow: 3,",
      "				slidesToScroll: 3",
      "			}",
      "		},",
      "		{",
      "			breakpoint: 579,",
      "			settings: {",
      "				slidesToShow: 1,",
      "				slidesToScroll: 1,",
      "			}",
      "		}",
      "	]",
      "});"
    ],
    "description": "Slick Carousel Boilerplate"
  },

  "ACF Repeatable Fields Loop": {
    "prefix": "acfrpt",
    "body": [
      "<?php if( have_rows('${1:fieldname}') ): ?>",
      "<?php while( have_rows('${1:fieldname}') ): the_row(); ?>",
      "<?php $$sub_field_3 = get_sub_field('sub_field_3'); ?>",
      "<?php endwhile; ?>",
      "<?php endif; ?>"
    ],
    "description": "ACF Repeatable Fields Loop"
  },

  "WP Thumbnail with Responsive Version": {
    "prefix": "wpthumbresponsive",
    "body": [
      "<?php ",
      "if(is_mobile()):",
      "	get_thumb('post-thumb-mobile', '', get_bloginfo('template_url').'/img/post-thumb-mobile.jpg');",
      "elseif(is_tablet()):",
      "	get_thumb('post-thumb-tablet', '', get_bloginfo('template_url').'/img/post-thumb-tablet.jpg');",
      "else:",
      "	get_thumb('post-thumb-desktop', '', get_bloginfo('template_url').'/img/post-thumb-desktop.jpg');",
      "endif;",
      "?>"
    ],
    "description": "WP Thumbnail with Responsive Version"
  },

  "Create New Section": {
    "prefix": "newsection",
    "body": [
      "<section id=\"${1}\" class=\"clearfix\">",
      "	${2}		",
      "</section>",
      "<!-- #${1} -->"
    ],
    "description": "Create New Section"
  },

  "Create New Div": {
    "prefix": "newdiv",
    "body": [
      "<div class=\"${1} clearfix\">",
      "	${2}		",
      "</div>",
      "<!-- .${1} -->"
    ],
    "description": "Create New Div"
  },

  "Single line If Condition": {
    "prefix": "onelineif",
    "body": ["<?php echo ()?'':'';?>"],
    "description": "Single line If Condition"
  },

  "Wordpress Post Date": {
    "prefix": "postdate",
    "body": ["<?php the_time('F jS, Y'); ?>"],
    "description": "Wordpress Post Date"
  },

  "Wordpress Post Tags": {
    "prefix": "posttags",
    "body": ["<?php the_tags('Tags: ', ', ', '<br />'); ?>"],
    "description": "Wordpress Post Tags"
  },

  "Wordpress Post Categories": {
    "prefix": "postcategories",
    "body": ["<?php the_category(', ') ?>"],
    "description": "Wordpress Post Categories"
  },

  "Hamburger Menu Button": {
    "prefix": "hamburger",
    "body": [
      "<button class=\"menu-open hamburger hamburger--slider\" type=\"button\">",
      "	<span class=\"hamburger-box\">",
      "		<span class=\"hamburger-inner\"></span>",
      "	</span>",
      "	<span class=\"hamburger-label\">Menu</span>",
      "</button>"
    ],
    "description": "Hamburger Menu Button"
  },

  "ACF Content": {
    "prefix": "acfcontent",
    "body": [
      "$${1:my_content} = get_field('${1:my_content}', false, false); ",
      "$${1:my_content}= apply_filters('the_content', $${1:my_content});",
      "echo $${1:my_content};"
    ],
    "description": "ACF Content"
  },

  "ACF Image": {
    "prefix": "acfimage",
    "body": [
      "$${1:example} = get_sub_field('${1:example}');",
      "$${1:example}_id = $${1:example}['ID'];",
      "echo wp_get_attachment_image( $${1:example}_id, 'full', false, array( 'class' => '' ) );"
    ],
    "description": "ACF Image"
  },

  "ACF Post Object Field": {
    "prefix": "acfobject",
    "body": [
      "$${1:field_name} = get_field('${1:field_name}');",
      "",
      "if( $${1:field_name}):",
      "",
      "foreach( $${1:field_name} as $$post): setup_postdata($$post);",
      "",
      "endforeach;",
      "",
      "wp_reset_postdata();",
      "",
      "endif;"
    ],
    "description": "ACF Post Object Field"
  },

  "Generate WP_Query loop": {
    "prefix": "wpquery",
    "body": [
      "$$args = array(",
      "	'post_type'              => array( 'recipe' ),",
      "	'posts_per_page'         => '5',",
      "	'tax_query' => array(",
      "		array(",
      "			'taxonomy' => 'video_type',",
      "			'terms' => 12,",
      "			'field' => 'id',",
      "			'operator' => 'IN'",
      "		),",
      "	),",
      ");",
      "",
      "$${1:my_query} = new WP_Query( $$args );",
      "",
      "if ( $${1:my_query}->have_posts() ) :",
      "	while ( $${1:my_query}->have_posts() ) : $${1:my_query}->the_post();",
      "",
      "	endwhile;",
      "endif;",
      "",
      "wp_reset_postdata();"
    ],
    "description": "Generate WP_Query loop"
  },

  "Wordpress Menu Generator": {
    "prefix": "wpmenu",
    "body": [
      "wp_nav_menu( array(",
      "    'theme_location' => '${1:menuname}',",
      "    'menu_id' => '${1:menuname}',",
      "    'menu_class' => '${1:menuname}',",
      "    'container' => false",
      ") );"
    ],
    "description": "Wordpress Menu Generator"
  },

  "Wordpress Template Name": {
    "prefix": "wptemplate",
    "body": ["/*", " *  Template Name: ${1:template_name}", " */"],
    "description": "Wordpress Template Name"
  },

  "Wordpress Thumbnail Custom Function": {
    "prefix": "wpthumbcustom",
    "body": [
      "get_thumb('${1:thumb-360x240}', '${2:post-thumb}', '${3:http://placehold.it/360x240}');"
    ],
    "description": "Wordpress Thumbnail Custom Function"
  },

  "Wordpress: Get image by ID": {
    "prefix": "wpimagebyid",
    "body": [
      "wp_get_attachment_image( '${1:image_id}, 'thumbnail', '', array( \"class\" => \"\" ))"
    ],
    "description": "Wordpress: Get image by ID"
  },

  "WP Image URL": {
    "prefix": "wpimageurl",
    "body": [
      "if(has_post_thumbnail())",
      "    $$banner_image = get_the_post_thumbnail_url( $$post->ID, 'featured-1920x800');",
      "else",
      "    $$banner_image = 'http://via.placeholder.com/1920x800';"
    ],
    "description": "WP Image URL"
  },

  "ACF Image URL": {
    "prefix": "acfimageurl",
    "body": [
      "$$thumbnail = get_sub_field('thumbnail');",
      "$$thumbnail_id = $$thumbnail['ID'];",
      "if($$thumbnail)",
      "    $$banner_image = $$thumbnail['sizes']['thumb-100x150'];",
      "else",
      "    $$banner_image = 'http://via.placeholder.com/100x150';"
    ],
    "description": "ACF Image URL"
  },

  "Wp Template URL": {
    "prefix": "wptemplateurl",
    "body": ["bloginfo(\"template_url\")"],
    "description": "Wp Template URL"
  },

  "Wp Site URL": {
    "prefix": "wpsiteurl",
    "body": ["bloginfo(\"url\");"],
    "description": "Wp Site URL"
  },

  "Wordpress Search Form": {
    "prefix": "wpsearchform",
    "body": [
      "<form action=\"<?php bloginfo('siteurl'); ?>\" id=\"searchform\" method=\"get\">",
      "    <div>",
      "        <label for=\"s\" class=\"screen-reader-text\">Search for:</label>",
      "        <input type=\"text\" id=\"s\" name=\"s\" value=\"<?php the_search_query();?>\" />",
      "        ",
      "        <input type=\"submit\" value=\"Search\" id=\"searchsubmit\" />",
      "    </div>",
      "</form>",
      ""
    ],
    "description": "Wordpress Search Form"
  },

  "Single line If Condition": {
    "prefix": "singleif",
    "body": ["<?php echo ()?'':'';?>"],
    "description": "Single line If Condition"
  },

  "Wordpress Post Date": {
    "prefix": "postdate",
    "body": ["the_time('F jS, Y');"],
    "description": "Wordpress Post Date"
  },

  "Wordpress Post Tags": {
    "prefix": "posttags",
    "body": ["the_tags('Tags: ', ', ', '<br />');"],
    "description": "Wordpress Post Tags"
  },

  "Wordpress Post Categories": {
    "prefix": "postcategories",
    "body": ["the_category(', ');"],
    "description": "Wordpress Post Categories"
  },

  "Laravel Varchar Fix": {
    "prefix": "laravelfix",
    "body": [
      "use Illuminate\\Support\\Facades\\Schema;",
      "Schema::defaultStringLength(191); "
    ],
    "description": "Laravel Varchar Fix"
  },

  "Laravel Vue Base Template": {
    "prefix": "laravelvuetemplate",
    "body": [
      "<!doctype html>",
      "<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">",
      "    <head>",
      "        <meta charset=\"utf-8\">",
      "        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
      "",
      "        <title>Laravel</title>",
      "",
      "        <!-- Fonts -->",
      "        <link href=\"https://fonts.googleapis.com/css?family=Nunito:200,600\" rel=\"stylesheet\">",
      "",
      "        <link href=\"{{ mix('css/app.css') }}\" type=\"text/css\" rel=\"stylesheet\" />",
      "        <meta name=\"csrf-token\" value=\"{{ csrf_token() }}\" />",
      "    </head>",
      "    <body>",
      "        <div id=\"app\"></div>",
      "		<script src=\"{{ mix('js/app.js') }}\" type=\"text/javascript\"></script>",
      "    </body>",
      "</html>",
      ""
    ],
    "description": "Laravel Vue Base Template"
  },

  "Menu Submenu SASS": {
    "prefix": "menucss",
    "body": [
      "ul.main-menu{",
      "	> li{",
      "		> a{",
      "",
      "		}",
      "",
      "		&:hover{",
      "			> a{",
      "",
      "			}",
      "		}",
      "",
      "		&.current-menu-item{",
      "			> a{",
      "",
      "			}",
      "		}",
      "",
      "		&.menu-item-has-children{",
      "			> ul.sub-menu{",
      "				> li{",
      "					> a{",
      "",
      "					}",
      "",
      "					&:hover{",
      "						> a{",
      "",
      "						}",
      "					}",
      "",
      "					&.current-menu-item{",
      "						> a{",
      "							",
      "						}",
      "					}",
      "				}",
      "			}",
      "		}",
      "	}",
      "}"
    ],
    "description": "Menu Submenu SASS"
  },

  "Lazy Eager Loading": {
    "prefix": "eagerloading",
    "body": ["$$novel->load('chapters', 'bookmarks');"],
    "description": "Lazy Eager Loading"
  },

  "Express App Boilerplate": {
    "prefix": "expressapp",
    "body": [
      "require('dotenv').config()",
      "const express = require(\"express\")",
      "const app = express()",
      "const port = process.env.PORT || 3000",
      "",
      "// Parse JSON requests",
      "app.use(express.json())",
      "// Apply urlencoded payload to requests",
      "app.use(express.urlencoded({ extended: true }));",
      "// Define static path to include css & js inside html template",
      "//app.use(express.static(__dirname + '/public'));",
      "",
      "// Set view folder and view engine",
      "//app.set('views', './pages');",
      "app.set('view engine', 'ejs');",
      "",
      "// Routes",
      "/* app.get('/', function(req, res) {",
      "	res.json({res:'hello'});",
      "}); */",
      "app.get('/', (req, res) => {",
      "	res.render(\"index\");",
      "})",
      "",
      "// Run the server",
      "app.listen(port, () => console.log(`app listening on port http://localhost:\\${port\\}`))"
    ],
    "description": "Express App Boilerplate"
  },

  "Media Queries": {
    "prefix": "mqall",
    "body": [
      "@media only screen and (max-width : 1200px) {",
      "	",
      "}",
      "@media only screen and (max-width : 1024px) {",
      "",
      "}",
      "@media only screen and (max-width : 768px) {",
      "",
      "}",
      "@media only screen and (max-width : 576px) {",
      "",
      "}"
    ],
    "description": "Media Queries"
  },

  "Hover CSS": {
    "prefix": "hovercss",
    "body": ["&:hover {", "  ${1}", "}"],
    "description": "Hover CSS"
  }
}
